name: deploy-book

on:
  pull_request:
    types:
      - review_requested
      - synchronize # Checks any commits made to the PR

# This job installs dependencies, builds the book, and pushes it to `gh-pages`
jobs:
  deploy-book:
    runs-on: ubuntu-latest
    steps:
      - id: repo
        name: Repo Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - id: python
        name: Python Setup
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: "pip"
      - run: pip install -r requirements.txt

      - id: build
        name: Build Book
        run: |
          jb build ./ace_associate/

      - name: Move Files
        run: |
          cp -rf ./ace_associate/_build/html/ docs/ace-associate

      - name: Setup Git Config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: commit
        run: |
          # Stage the file, commit and push
          git add .
          git commit -m "auto build from GitHub Actions"
          git push origin ${{ github.event.pull_request.head.ref }}

      # - name: Merge development -> staging
      #   uses: devmasx/merge-branch@master
      #   with:
      #     type: now
      #     from_branch: ${{ github.event.pull_request.head.ref }}
      #     target_branch: origin/${{ github.event.pull_request.head.ref }}
      #     github_token: ${{ secrets.GITHUB_TOKEN }}

      # - name: GitHub Pages action
      #   uses: peaceiris/actions-gh-pages@v3.6.1
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_branch: ${{ github.event.pull_request.head.ref }} # This is the branch that the PR is from.
      #     publish_dir: ./docs/
      #     keep_files: true
